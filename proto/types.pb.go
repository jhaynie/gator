// Code generated by protoc-gen-go.
// source: types.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ID struct {
}

func (m *ID) Reset()                    { *m = ID{} }
func (m *ID) String() string            { return proto1.CompactTextString(m) }
func (*ID) ProtoMessage()               {}
func (*ID) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type DateTime struct {
}

func (m *DateTime) Reset()                    { *m = DateTime{} }
func (m *DateTime) String() string            { return proto1.CompactTextString(m) }
func (*DateTime) ProtoMessage()               {}
func (*DateTime) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Checksum struct {
}

func (m *Checksum) Reset()                    { *m = Checksum{} }
func (m *Checksum) String() string            { return proto1.CompactTextString(m) }
func (*Checksum) ProtoMessage()               {}
func (*Checksum) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type UID struct {
}

func (m *UID) Reset()                    { *m = UID{} }
func (m *UID) String() string            { return proto1.CompactTextString(m) }
func (*UID) ProtoMessage()               {}
func (*UID) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func init() {
	proto1.RegisterType((*ID)(nil), "proto.ID")
	proto1.RegisterType((*DateTime)(nil), "proto.DateTime")
	proto1.RegisterType((*Checksum)(nil), "proto.Checksum")
	proto1.RegisterType((*UID)(nil), "proto.UID")
}

func init() { proto1.RegisterFile("types.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 80 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x2c, 0x5c, 0x4c, 0x9e,
	0x2e, 0x4a, 0x5c, 0x5c, 0x1c, 0x2e, 0x89, 0x25, 0xa9, 0x21, 0x99, 0xb9, 0xa9, 0x20, 0xb6, 0x73,
	0x46, 0x6a, 0x72, 0x76, 0x71, 0x69, 0xae, 0x12, 0x2b, 0x17, 0x73, 0xa8, 0xa7, 0x4b, 0x12, 0x1b,
	0x58, 0xad, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x3c, 0xfe, 0xb2, 0x41, 0x00, 0x00, 0x00,
}
